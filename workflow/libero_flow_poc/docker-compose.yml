version: '3'

services:
  ui:
    build:
      context: .
      dockerfile: Dockerfile.webui
    ports:
      - '4200:4200'

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
            /bin/bash -c "
                until echo > /dev/tcp/postgres/5432; do sleep 1; done
                python manage.py migrate && python manage.py runserver 0.0.0.0:8000
            "
    env_file:
      - '.env'
    ports:
      - '8000:8000'
    depends_on:
      - postgres
      - redis
      - rabbitmq

  decider:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /srv/app
    command: >
            /bin/bash -c "
                until echo > /dev/tcp/rabbitmq/5672; do sleep 1; done
                python run_decider.py
            "
    depends_on:
      - rabbitmq

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /srv/app
    command: >
            /bin/bash -c "
                until echo > /dev/tcp/rabbitmq/5672; do sleep 1; done
                python run_scheduler.py
            "
    depends_on:
      - rabbitmq

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /srv/app
    command: >
            /bin/bash -c "
                until echo > /dev/tcp/rabbitmq/5672; do sleep 1; done
                python run_worker.py
            "
    depends_on:
      - rabbitmq

  redis:
    image: 'redis:3.0-alpine'
    ports:
      - '6379:6379'
    volumes:
      - 'redis:/data'

  rabbitmq:
    image: 'rabbitmq:3.7.3-management'
    ports:
      - '8080:15672'
      - '5672:5672'
    volumes:
      - 'rabbitmq:/var/lib/rabbitmq'

  postgres:
    image: 'postgres:9.5-alpine'
    env_file:
      - '.env'
    ports:
      - '5432:5432'
    volumes:
      - 'postgres:/var/lib/postgresql/data'

volumes:
  postgres:
  redis:
  rabbitmq:
